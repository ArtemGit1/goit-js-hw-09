{"mappings":"YAgCA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzCPO,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SAEpCD,EAAKD,iBAAiB,UAAU,SAAUG,GACxCA,EAAEC,iBAEF,IAAMC,EAAaJ,EAAKC,cAAc,uBAChCI,EAAYL,EAAKC,cAAc,sBAC/BK,EAAcN,EAAKC,cAAc,wBAEjCM,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEpC,GAAIG,MAAML,IAAUK,MAAMF,IAASE,MAAMD,GACvCE,MAAM,sEAKR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BzB,EAAcyB,EAAI,EAAGP,EAAQO,EAAIJ,GAC9BK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,QAAQC,IAAI,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,QAAQC,IAAI,sBAAqCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (e) {\n    e.preventDefault();\n\n    const delayInput = form.querySelector('input[name=\"delay\"]');\n    const stepInput = form.querySelector('input[name=\"step\"]');\n    const amountInput = form.querySelector('input[name=\"amount\"]');\n\n    const delay = parseInt(delayInput.value);\n    const step = parseInt(stepInput.value);\n    const amount = parseInt(amountInput.value);\n\n    if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n      alert('Будь ласка, введіть коректні числові значення для всіх полів.');\n      return;\n    }\n\n \n    for (let i = 0; i < amount; i++) {\n      createPromise(i + 1, delay + i * step)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","addEventListener","form","querySelector","e","preventDefault","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","isNaN","alert","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.22487fcc.js.map"}